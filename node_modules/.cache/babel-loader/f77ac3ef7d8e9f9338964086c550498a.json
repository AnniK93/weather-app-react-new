{"ast":null,"code":"var _jsxFileName = \"/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  let [city, setCity] = useState(\"Berlin\");\n  let [message, setMessage] = useState(\"\");\n  let [loaded, setLoaded] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`The weather in ${city}:`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city..\",\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(weather.temperature), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"description\",\n          children: [\"Description: \", weather.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", weather.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", weather.wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(Search, \"f33shlI/L7ItiCw4JQIzS633kt4=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js"],"names":["React","axios","Search","city","setCity","useState","message","setMessage","loaded","setLoaded","weather","setWeather","showWeather","response","temperature","data","main","temp","wind","speed","humidity","icon","description","handleSubmit","event","preventDefault","apiKey","units","url","get","then","length","alert","updateCity","target","value","form","Math","round"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,QAAD,CAA9B;AACA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACG,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASO,WAAT,CAAqBC,QAArB,EAA+B;AAC7BJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,UAAU,CAAC;AACTG,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IADvB;AAETC,MAAAA,IAAI,EAAEL,QAAQ,CAACE,IAAT,CAAcG,IAAd,CAAmBC,KAFhB;AAGTC,MAAAA,QAAQ,EAAEP,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBI,QAHpB;AAITC,MAAAA,IAAI,EAAG,oCAAmCR,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsB,CAAtB,EAAyBW,IAAK,SAJ/D;AAKTC,MAAAA,WAAW,EAAET,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsB,CAAtB,EAAyBY;AAL7B,KAAD,CAAV;AAOD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAI,qDAAoDzB,IAAK,UAASuB,MAAO,UAASC,KAAM,EAAnG;AAEA1B,IAAAA,KAAK,CAAC4B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBlB,WAApB;;AAEA,QAAIT,IAAI,CAAC4B,MAAL,GAAc,CAAlB,EAAqB;AACnBxB,MAAAA,UAAU,CAAE,kBAAiBJ,IAAK,GAAxB,CAAV;AACD,KAFD,MAEO;AACL6B,MAAAA,KAAK,CAAE,gCAAF,CAAL;AACD;AACF;;AAED,WAASC,UAAT,CAAoBT,KAApB,EAA2B;AACzBpB,IAAAA,OAAO,CAACoB,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,MAAIC,IAAI,gBACN;AAAM,IAAA,QAAQ,EAAEb,YAAhB;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,gBAAjC;AAAkD,MAAA,QAAQ,EAAEU;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,MAAIzB,MAAJ,EAAY;AACV,wBACE;AAAA,iBACG4B,IADH,eAEE;AAAA,kBAAK9B;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCACE;AAAA,sCAAkB+B,IAAI,CAACC,KAAL,CAAW5B,OAAO,CAACI,WAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,sCAA0CJ,OAAO,CAACY,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,mCAAeZ,OAAO,CAACU,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BAAWV,OAAO,CAACQ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAER,OAAO,CAACW,IAAlB;AAAwB,YAAA,GAAG,EAAEX,OAAO,CAACY;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACL,WAAOc,IAAP;AACD;AACF;;GA/DuBlC,M;;KAAAA,M","sourcesContent":["import React from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  let [city, setCity] = useState(\"Berlin\");\n  let [message, setMessage] = useState(\"\");\n  let [loaded, setLoaded] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`The weather in ${city}:`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input type=\"search\" placeholder=\"Enter a city..\" onChange={updateCity} />\n      <button type=\"Submit\">Search</button>\n    </form>\n  );\n\n  if (loaded) {\n    return (\n      <div>\n        {form}\n        <h2>{message}</h2>\n        <ul>\n          <li>Temperature: {Math.round(weather.temperature)}Â°C</li>\n          <li className=\"description\">Description: {weather.description}</li>\n          <li>Humidity: {weather.humidity}%</li>\n          <li>Wind: {weather.wind}km/h</li>\n          <li>\n            <img src={weather.icon} alt={weather.description} />\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return form;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}