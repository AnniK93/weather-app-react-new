{"ast":null,"code":"var _jsxFileName = \"/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`The weather in ${city}:`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Temperature: \", Math.round(weather.temperature), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"description\",\n          children: [\"Description: \", weather.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", weather.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", weather.wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.icon,\n            alt: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js"],"names":["React","axios","Search","showWeather","response","setLoaded","setWeather","temperature","data","main","temp","wind","speed","humidity","icon","weather","description","handleSubmit","event","preventDefault","apiKey","units","url","city","get","then","length","setMessage","alert","updateCity","setCity","target","value","form","loaded","message","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7BC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,IAAAA,UAAU,CAAC;AACTC,MAAAA,WAAW,EAAEH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,IADvB;AAETC,MAAAA,IAAI,EAAEP,QAAQ,CAACI,IAAT,CAAcG,IAAd,CAAmBC,KAFhB;AAGTC,MAAAA,QAAQ,EAAET,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBI,QAHpB;AAITC,MAAAA,IAAI,EAAG,oCAAmCV,QAAQ,CAACI,IAAT,CAAcO,OAAd,CAAsB,CAAtB,EAAyBD,IAAK,SAJ/D;AAKTE,MAAAA,WAAW,EAAEZ,QAAQ,CAACI,IAAT,CAAcO,OAAd,CAAsB,CAAtB,EAAyBC;AAL7B,KAAD,CAAV;AAOD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAI,qDAAoDC,IAAK,UAASH,MAAO,UAASC,KAAM,EAAnG;AAEApB,IAAAA,KAAK,CAACuB,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBtB,WAApB;;AAEA,QAAIoB,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnBC,MAAAA,UAAU,CAAE,kBAAiBJ,IAAK,GAAxB,CAAV;AACD,KAFD,MAEO;AACLK,MAAAA,KAAK,CAAE,gCAAF,CAAL;AACD;AACF;;AAED,WAASC,UAAT,CAAoBX,KAApB,EAA2B;AACzBY,IAAAA,OAAO,CAACZ,KAAK,CAACa,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,MAAIC,IAAI,gBACN;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAEY;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAWA,MAAIK,MAAJ,EAAY;AACV,wBACE;AAAA,iBACGD,IADH,eAEE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,gCACE;AAAA,sCAAkBC,IAAI,CAACC,KAAL,CAAWtB,OAAO,CAACR,WAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,sCAA0CQ,OAAO,CAACC,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,mCAAeD,OAAO,CAACF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BAAWE,OAAO,CAACJ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEI,OAAO,CAACD,IAAlB;AAAwB,YAAA,GAAG,EAAEC,OAAO,CAACC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD,MAgBO;AACL,WAAOiB,IAAP;AACD;AACF;KA9DuB/B,M","sourcesContent":["import React from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`The weather in ${city}:`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"search\"\n        placeholder=\"Enter a city...\"\n        onChange={updateCity}\n      />\n      <button type=\"Submit\">Search</button>\n    </form>\n  );\n\n  if (loaded) {\n    return (\n      <div>\n        {form}\n        <h2>{message}</h2>\n        <ul>\n          <li>Temperature: {Math.round(weather.temperature)}Â°C</li>\n          <li className=\"description\">Description: {weather.description}</li>\n          <li>Humidity: {weather.humidity}%</li>\n          <li>Wind: {weather.wind}km/h</li>\n          <li>\n            <img src={weather.icon} alt={weather.description} />\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return form;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}