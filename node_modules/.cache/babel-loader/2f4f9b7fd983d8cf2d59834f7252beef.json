{"ast":null,"code":"var _jsxFileName = \"/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  let [city, setCity] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  let [loaded, setLoaded] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`${city}`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function handlePosition(position) {\n    console.log(position);\n    let lat = `${position.coords.latitude}`;\n    let lon = `${position.coords.longitude}`;\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"imperial\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(showWeather);\n  }\n\n  function searchCurrentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(handlePosition);\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function formatHour(timestamp) {\n    let date = new Date(timestamp * 1000);\n    let hour = date.getHours();\n\n    if (hour < 10) {\n      hour = `0${hour}`;\n    }\n\n    return hour;\n  }\n\n  let now = new Date();\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = now.getDay();\n  let currentDay = days[now.getDay()];\n  let minutes = now.getMinutes();\n\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = now.getHours();\n\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let currentTime = `${hours}:${minutes}`;\n\n  let header = /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citynames\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col cityname\",\n          id: \"moscow\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"link\",\n              children: \"Moscow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col cityname\",\n          id: \"berlin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"link\",\n              children: \"Berlin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col cityname\",\n          id: \"london\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"link\",\n              children: \"London\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col cityname\",\n          id: \"new-york\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"link\",\n              children: \"New York\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Enter a city...\",\n      onChange: updateCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"\\uD83D\\uDCCD Current location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      children: \"\\uD83D\\uDDFA Random location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [header, form, /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"weatherDetails\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Last update: \", date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [Math.round(weather.temperature), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"description\",\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Humidity: \", weather.humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Wind: \", weather.wind, \"m/sec\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: weather.icon,\n              alt: weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [header, form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Search, \"eCaDBfoO8JBmNTa6rjCIbFTpe/A=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/annikaklein/Documents/Sonstiges/Coding/weather-app-react/src/Search.js"],"names":["React","useState","axios","Search","city","setCity","message","setMessage","loaded","setLoaded","weather","setWeather","showWeather","response","temperature","data","main","temp","wind","speed","humidity","icon","description","handleSubmit","event","preventDefault","apiKey","units","url","get","then","length","alert","handlePosition","position","console","log","lat","coords","latitude","lon","longitude","apiUrl","searchCurrentLocation","navigator","geolocation","getCurrentPosition","updateCity","target","value","formatHour","timestamp","date","Date","hour","getHours","now","days","day","getDay","currentDay","minutes","getMinutes","hours","currentTime","header","form","Math","round"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASW,WAAT,CAAqBC,QAArB,EAA+B;AAC7BJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,UAAU,CAAC;AACTG,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IADvB;AAETC,MAAAA,IAAI,EAAEL,QAAQ,CAACE,IAAT,CAAcG,IAAd,CAAmBC,KAFhB;AAGTC,MAAAA,QAAQ,EAAEP,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBI,QAHpB;AAITC,MAAAA,IAAI,EAAG,oCAAmCR,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsB,CAAtB,EAAyBW,IAAK,SAJ/D;AAKTC,MAAAA,WAAW,EAAET,QAAQ,CAACE,IAAT,CAAcL,OAAd,CAAsB,CAAtB,EAAyBY;AAL7B,KAAD,CAAV;AAOD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAI,qDAAoDxB,IAAK,UAASsB,MAAO,UAASC,KAAM,EAAnG;AAEAzB,IAAAA,KAAK,CAAC2B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBlB,WAApB;;AAEA,QAAIR,IAAI,CAAC2B,MAAL,GAAc,CAAlB,EAAqB;AACnBxB,MAAAA,UAAU,CAAE,GAAEH,IAAK,EAAT,CAAV;AACD,KAFD,MAEO;AACL4B,MAAAA,KAAK,CAAE,gCAAF,CAAL;AACD;AACF;;AAED,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,GAAG,GAAI,GAAEH,QAAQ,CAACI,MAAT,CAAgBC,QAAS,EAAtC;AACA,QAAIC,GAAG,GAAI,GAAEN,QAAQ,CAACI,MAAT,CAAgBG,SAAU,EAAvC;AACA,QAAIf,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,UAAZ;AACA,QAAIe,MAAM,GAAI,uDAAsDL,GAAI,QAAOG,GAAI,UAASd,MAAO,UAASC,KAAM,EAAlH;AAEAzB,IAAAA,KAAK,CAAC2B,GAAN,CAAUa,MAAV,EAAkBZ,IAAlB,CAAuBlB,WAAvB;AACD;;AAED,WAAS+B,qBAAT,CAA+BnB,KAA/B,EAAsC;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAmB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCb,cAAzC;AACD;;AAED,WAASc,UAAT,CAAoBvB,KAApB,EAA2B;AACzBnB,IAAAA,OAAO,CAACmB,KAAK,CAACwB,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC7B,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,CAAX;AACA,QAAIG,IAAI,GAAGF,IAAI,CAACG,QAAL,EAAX;;AACA,QAAID,IAAI,GAAG,EAAX,EAAe;AACbA,MAAAA,IAAI,GAAI,IAAGA,IAAK,EAAhB;AACD;;AACD,WAAOA,IAAP;AACD;;AACD,MAAIE,GAAG,GAAG,IAAIH,IAAJ,EAAV;AAEA,MAAII,IAAI,GAAG,CACT,QADS,EAET,QAFS,EAGT,SAHS,EAIT,WAJS,EAKT,UALS,EAMT,QANS,EAOT,UAPS,CAAX;AASA,MAAIC,GAAG,GAAGF,GAAG,CAACG,MAAJ,EAAV;AACA,MAAIC,UAAU,GAAGH,IAAI,CAACD,GAAG,CAACG,MAAJ,EAAD,CAArB;AACA,MAAIE,OAAO,GAAGL,GAAG,CAACM,UAAJ,EAAd;;AACA,MAAID,OAAO,GAAG,EAAd,EAAkB;AAChBA,IAAAA,OAAO,GAAI,IAAGA,OAAQ,EAAtB;AACD;;AAED,MAAIE,KAAK,GAAGP,GAAG,CAACD,QAAJ,EAAZ;;AACA,MAAIQ,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAI,IAAGA,KAAM,EAAlB;AACD;;AAED,MAAIC,WAAW,GAAI,GAAED,KAAM,IAAGF,OAAQ,EAAtC;;AAEA,MAAII,MAAM,gBACR;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,QAAjC;AAAA,iCACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,QAAjC;AAAA,iCACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,QAAjC;AAAA,iCACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAgBE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,UAAjC;AAAA,iCACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AA4BA,MAAIC,IAAI,gBACN;AAAM,IAAA,QAAQ,EAAE3C,YAAhB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAEwB;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,MAAIvC,MAAJ,EAAY;AACV,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACGyD,MADH,EAEGC,IAFH,eAGE;AAAA,oBAAK5D;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,kCACE;AAAA,wCAAkB8C,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,uBAAKe,IAAI,CAACC,KAAL,CAAW1D,OAAO,CAACI,WAAnB,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6BJ,OAAO,CAACY;AAArC;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,qCAAeZ,OAAO,CAACU,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,iCAAWV,OAAO,CAACQ,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,mCACE;AAAK,cAAA,GAAG,EAAER,OAAO,CAACW,IAAlB;AAAwB,cAAA,GAAG,EAAEX,OAAO,CAACY;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAoBO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACG2C,MADH,EAEGC,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;;GA3JuB/D,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  let [city, setCity] = useState(\"\");\n  let [message, setMessage] = useState(\"\");\n  let [loaded, setLoaded] = useState(false);\n  let [weather, setWeather] = useState({});\n\n  function showWeather(response) {\n    setLoaded(true);\n    setWeather({\n      temperature: response.data.main.temp,\n      wind: response.data.wind.speed,\n      humidity: response.data.main.humidity,\n      icon: `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`,\n      description: response.data.weather[0].description,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n\n    axios.get(url).then(showWeather);\n\n    if (city.length > 0) {\n      setMessage(`${city}`);\n    } else {\n      alert(`Please type the name of a city`);\n    }\n  }\n\n  function handlePosition(position) {\n    console.log(position);\n    let lat = `${position.coords.latitude}`;\n    let lon = `${position.coords.longitude}`;\n    let apiKey = \"6697611895f9d8bb5ac23403332f6cdd\";\n    let units = \"imperial\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n\n    axios.get(apiUrl).then(showWeather);\n  }\n\n  function searchCurrentLocation(event) {\n    event.preventDefault();\n    navigator.geolocation.getCurrentPosition(handlePosition);\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function formatHour(timestamp) {\n    let date = new Date(timestamp * 1000);\n    let hour = date.getHours();\n    if (hour < 10) {\n      hour = `0${hour}`;\n    }\n    return hour;\n  }\n  let now = new Date();\n\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let day = now.getDay();\n  let currentDay = days[now.getDay()];\n  let minutes = now.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let hours = now.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let currentTime = `${hours}:${minutes}`;\n\n  let header = (\n    <header>\n      <div className=\"citynames\">\n        <div className=\"row\">\n          <div className=\"col cityname\" id=\"moscow\">\n            <p>\n              <a href=\"link\">Moscow</a>\n            </p>\n          </div>\n          <div className=\"col cityname\" id=\"berlin\">\n            <p>\n              <a href=\"link\">Berlin</a>\n            </p>\n          </div>\n          <div className=\"col cityname\" id=\"london\">\n            <p>\n              <a href=\"link\">London</a>\n            </p>\n          </div>\n          <div className=\"col cityname\" id=\"new-york\">\n            <p>\n              <a href=\"link\">New York</a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"search\"\n        placeholder=\"Enter a city...\"\n        onChange={updateCity}\n      />\n      <button type=\"Submit\">Search</button>\n      <button type=\"Submit\">📍 Current location</button>\n      <button type=\"Submit\">🗺 Random location</button>\n    </form>\n  );\n\n  if (loaded) {\n    return (\n      <body>\n        <div className=\"container\">\n          {header}\n          {form}\n          <h2>{message}</h2>\n          <ul className=\"weatherDetails\">\n            <li>Last update: {date}</li>\n            <li>{Math.round(weather.temperature)}°C</li>\n            <li className=\"description\">{weather.description}</li>\n            <li>Humidity: {weather.humidity}%</li>\n            <li>Wind: {weather.wind}m/sec</li>\n            <li>\n              <img src={weather.icon} alt={weather.description} />\n            </li>\n          </ul>\n        </div>\n      </body>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        {header}\n        {form}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}